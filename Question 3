import cv2
import numpy as np
confThreshold = 0.5
cam = cv2.VideoCapture(0)
cam.set(3, 1280)
cam.set(4, 720)
classesFile = 'coco80 (1).names'
classes = None
with open(classesFile, 'rt') as f:
    classes = f.read().rstrip('\n').split('\n')
net = cv2.dnn.readNetFromDarknet('yolov3 (1).cfg', 'yolov3.weights')
net.setPreferableBackend(cv2.dnn.DNN_BACKEND_OPENCV)
net.setPreferableTarget(cv2.dnn.DNN_TARGET_CPU)
fruit_prices = {'apple': 1, 'banana': 2, 'orange': 3}

while True:
    success, img = cam.read()
    height, width, ch = img.shape
    fruit_counter = {fruit: 0 for fruit in fruit_prices.keys()}
    total_price = 0
    blob = cv2.dnn.blobFromImage(img, 1 / 255, (416, 416), [0, 0, 0], 1, crop=False)
    net.setInput(blob)
    LayerOutputs = net.forward(net.getUnconnectedOutLayersNames())
    class_ids = []
    confidences = []
    boxes = []
    for output in LayerOutputs:
        for detection in output:
            scores = detection[5:]
            class_id = np.argmax(scores)
            confidence = scores[class_id]
            if confidence > confThreshold:
                center_x = int(detection[0] * width)
                center_y = int(detection[1] * height)
                w = int(detection[2] * width)
                h = int(detection[3] * height)
                x = int(center_x - w / 2)
                y = int(center_y - h / 2)
                label = str(classes[class_id])
                if label in fruit_prices:
                    fruit_counter[label] += 1
                    total_price += fruit_prices[label]
                    cv2.rectangle(img, (x, y), (x + w, y + h), (0, 255, 0), 2)
                    cv2.putText(img, f'{label} {confidence:.2f}', (x, y + 20), cv2.FONT_HERSHEY_SIMPLEX, 0.5,(255, 255, 255), 2)
        for i, (fruit, count) in enumerate(fruit_counter.items()):
            cv2.putText(img, f'{fruit}: {count}', (width - 200, 30 + i * 30), cv2.FONT_HERSHEY_SIMPLEX, 1, (0, 0, 255),2)
            cv2.putText(img, f'Total price: {total_price}', (width - 220, 30 + len(fruit_counter) * 30),cv2.FONT_HERSHEY_SIMPLEX, 1, (0, 0, 255), 2)
    cv2.imshow('Image', img)
    if cv2.waitKey(1) & 0xFF == ord('q'):
        break
cam.release()
cv2.destroyAllWindows()
